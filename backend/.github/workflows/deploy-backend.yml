name: Deploy Backend to Cloud Run

on:
  push:
    branches: [ main ]
    paths: 
      - 'backend/**'
  pull_request:
    branches: [ main ]
    paths: 
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.21
    
    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    
    - name: Install dependencies
      run: go mod download
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Run linter
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        working-directory: ./backend

  deploy:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_SA_KEY }}'
    
    - name: 'Set up Cloud SDK'
      uses: 'google-github-actions/setup-gcloud@v1'
    
    - name: 'Configure Docker to use gcloud as credential helper'
      run: gcloud auth configure-docker
    
    - name: 'Build and submit to Cloud Build'
      run: |
        gcloud builds submit \
          --config cloudbuild.yaml \
          --substitutions COMMIT_SHA=${{ github.sha }} \
          .
    
    - name: 'Get Cloud Run URL'
      id: 'url'
      run: |
        URL=$(gcloud run services describe f2p-buddy-api --region=us-central1 --format="value(status.url)")
        echo "url=$URL" >> $GITHUB_OUTPUT
    
    - name: 'Test deployment'
      run: |
        curl -f "${{ steps.url.outputs.url }}/api/health" || exit 1
        echo "âœ… Backend deployed successfully at ${{ steps.url.outputs.url }}"